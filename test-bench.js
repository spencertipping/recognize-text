caterwaul.module( 'test-bench' , function (c) { (function () {var url = window.URL || window.webkitURL, revoke_img_url =function () { ; return url.revokeObjectURL( $(this) .attr( 'src'))} , workspace =function () { ; return setup_dimensions(jQuery( "<canvas>") .addClass( "workspace")) .bind( "dragover" ,setup_copy) .bind( "drop" ,add_files_to_workspace)} , setup_dimensions =function (e) { ; return( e) .css( {width: $(window) .width() , height: $(window) .height()})} , setup_copy =function (e) { ; return( ( e.stopPropagation() , e.preventDefault()) , e.originalEvent.dataTransfer.dropEffect = 'copy')} , add_files_to_workspace =function (e) { ; return(function (xs1) {var x1, x01, xi1, xl1, xr1;for (var xi1 = 0, xl1 = xs1.length; xi1 < xl1; ++xi1) x1 = xs1[xi1] , (add_one(x1)) ; return xs1}) .call(this, e.originalEvent.dataTransfer.files)} , locate_text =function () { ; return draw_indicators(recognize_text( $( '.workspace') [0] .getContext( '2d') .getImageData(0, 0, $( '.workspace') .width() , $( '.workspace') .height())))} , draw_indicators =function (results) { ; return(function () {var c = $( '.workspace') [0] .getContext( '2d') ; return(function (xs) {var x, x0, xi, xl, xr;for (var xi = 0, xl = xs.length; xi < xl; ++xi) x = xs[xi] , (c.fillStyle = ( 'rgba(128,0,255,' + (x.confidence) + ')') , c.fillRect(x.x, x.y, 1, 1)) ; return xs}) .call(this, results)}) .call(this)} , add_one =function (file) { ; return(function () {var data = url.createObjectURL(file) ; return( $( 'body')) .append(jQuery( "<img>") .addClass( "element") .attr( "src" ,data) .bind( "load" ,revoke_img_url) .bind( "load" ,draw_and_locate))}) .call(this)} , draw_and_locate =function () { ; return( (function () {var w = $(this) .width() , h = $(this) .height() , attrs = {width: w, height: h} ; return( ( $( '.workspace')) .attr( attrs)) .css( attrs)}) .call(this) , (function (it) {return locate_text() , it}) .call(this, ( (function (it) {return it.drawImage(this, 0, 0) , it}) .call(this, ( (function (it) {return it.clearRect(0, 0, $( '.workspace') .width() , $( '.workspace') .height()) , it}) .call(this, ( $( '.workspace') [0] .getContext( '2d'))))))))} ; return $(function (_) {return($( 'body')) .append( workspace())})}) .call(this)}) ;